(()=>{"use strict";(()=>{const e=(e=document,t)=>e.querySelector(t);function t(){const e=this.node,t=Array.from((new DOMParser).parseFromString(this.template(),"text/html").body.children),s=new DocumentFragment;s.append(...t),e.after(s),this.node=e.nextSibling;const n=e.classList.value.trim(),i=this.node.classList.value.trim(),a=n!==i&&i||n;a?(this.node.className=a,e.remove()):e.remove()}var s=function(e,t,s,n){return new(s||(s=Promise))((function(i,a){function r(e){try{o(n.next(e))}catch(e){a(e)}}function l(e){try{o(n.throw(e))}catch(e){a(e)}}function o(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,l)}o((n=n.apply(e,t||[])).next())}))};class n{constructor({node:e,initalState:t,renderStateKey:s=[]}){this.node=e,this.initalState=t,this.renderStateKey=new Set(s),this.subscribers=new Set([]),this.isNeedRender=!1,this.isNeedUpdate=!1,this.setup(),this.render()}setup(){}render(){window.requestAnimationFrame((()=>{t.call(this),this.setEvent(),this.renderChildComponent()}))}updater(){this.isNeedRender?(this.clearEvent(),this.render()):this.renderChildComponent()}renderChildComponent(){}setEvent(){}clearEvent(){}template(){return""}subscribe(...e){e.forEach((e=>{this.subscribers.add(e)}))}notify(e){Array.from(this.subscribers).forEach((t=>{t.setState(e),t.updater(),t.isNeedRender=!1}))}setState(e){this.checkUpdataState(e),this.isNeedUpdate&&(this.reflectNeedRender(e),this.reflectState(e),this.notify(e),((e,t)=>{try{localStorage.setItem("searchState",JSON.stringify(t))}catch(e){throw new Error("저장이 되지 않았습니다!")}})(0,this.initalState))}checkUpdataState(e){const t=JSON.stringify(Object.assign({},this.initalState)),s=JSON.stringify(Object.assign(Object.assign({},this.initalState),e));this.isNeedUpdate=t!==s}reflectNeedRender(e){const t=Object.keys(e),s=Array.from(this.renderStateKey),n=t.filter((e=>s.includes(e)));this.isNeedRender=0===n.length}reflectState(e){Object.keys(e).forEach((t=>{const s=t;this.initalState[s]=e[s]}))}}const i={SearchInput__input:"oZFdS8AMjR5RMYyBNvKV"};class a extends n{template(){const{SearchInput__input:e}=i,{keyword:t}=this.initalState;return`\n      <input class='${e}' type='text' placeholder='웹툰제목, 작가이름으로 검색' value='${t}'/>\n    `}setup(){const{onInput:e}=this.initalState;this.handleInput=t=>{e(t.target.value)},this.handleFocus=()=>{this.node.focus()}}setEvent(){this.node.addEventListener("input",this.handleInput),this.handleFocus()}clearEvent(){this.node.removeEventListener("input",this.handleInput)}}const r={result_list:"hjCdco27lJJTo2oyRN5w",selected:"yqBqWxiR9AStGB58rLfS",matched:"OAf5JwkD9oSOJWplWK_0"};class l extends n{template(){var e;const{selectedIndex:t,isResultListVisiable:s,listData:n,keyword:i}=this.initalState,{result_list:a,selected:l,matched:o}=r,c=(e,t)=>{if(!e.includes(t))return e;const s=e.match(new RegExp(t,"gi"))[0];return e.replace(new RegExp(s,"gi"),`<span class='${o}'>${s}</span>`)};return`\n      <ul class='${s?`${a}`:"hide"}'>${null===(e=Array.from(n))||void 0===e?void 0:e.map(((e,s)=>`<li class='${s===t?`${l}`:""}' data-index='${s}'>\n              <span>${c(e.title,i)}</span>\n              <span>[ ${c(e.author,i)} ] </span>\n            </li>`)).join("")}\n      </ul>\n    `}setup(){const{onClick:e}=this.initalState;this.handleClick=t=>{const s=t.target.closest("li");if(s){const{index:t}=s.dataset;e(this.initalState.listData[parseInt(t)],t)}}}setEvent(){this.node.addEventListener("click",this.handleClick);const{selectedIndex:e}=this.initalState;(e>0&&e<=3||0===e)&&this.node.scrollTo(0,0),e>3&&this.node.scrollTo(0,40.5*(e-3))}clearEvent(){this.node.removeEventListener("click",this.handleClick)}}class o extends n{template(){const{isModalVisiable:e,selectedItem:t}=this.initalState;return`\n    <div class='${e?"item_info":"hide"}' >\n      <div class='modal'>\n        <button>X</button> \n        <a href='${t.url||""}' target='_blank'>\n          <img src='${t.img||""}' />\n        </a>\n        <p>웹툰 제목: ${t.title||""}</p>\n        <p>작가: ${t.author||""}</p>\n        <p>연재 사이트: ${t.service||""}</p>\n      </div>\n    </div>\n    `}}new class extends n{constructor({node:e}){super({node:e,initalState:{keyword:"",selectedIndex:0,listData:[],selectedItem:{},isResultListVisiable:!1,isModalVisiable:!1}})}setup(){this.setState(Object.assign(Object.assign({},this.initalState),(e=>{try{const e=localStorage.getItem("searchState");return e?JSON.parse(e):[]}catch(e){throw new Error(e)}})())),this.handleChange=((e,t)=>{let s;return t=>{s&&clearTimeout(s),s=window.setTimeout(e,200,t)}})((e=>{return t=this,n=void 0,a=function*(){const t=yield(e=>s(void 0,void 0,void 0,(function*(){return t=`https://korea-webtoon-api.herokuapp.com/search?keyword=${e}`,s(void 0,void 0,void 0,(function*(){try{const e=yield fetch(t);if(!e.ok)throw new Error("서버와의 연결이 불안정합니다!");return(yield e.json()).webtoons}catch(e){console.error(`에러가 발생했습니다! ${e.message}`)}}));var t})))(e);e&&t.length?this.setState({isResultListVisiable:!0,listData:t,keyword:e}):this.setState({isResultListVisiable:!1,selectedIndex:0,keyword:"",listData:[],selectedItem:{}})},new((i=void 0)||(i=Promise))((function(e,s){function r(e){try{o(a.next(e))}catch(e){s(e)}}function l(e){try{o(a.throw(e))}catch(e){s(e)}}function o(t){var s;t.done?e(t.value):(s=t.value,s instanceof i?s:new i((function(e){e(s)}))).then(r,l)}o((a=a.apply(t,n||[])).next())}));var t,n,i,a})),this.handleKeyChange=e=>{const{listData:t,selectedIndex:s}=this.initalState;if(["ArrowUp","ArrowDown","Enter","Escape"].includes(e.key)&&!t.length)return;const n=t.length-1;let i=s;switch(e.key){case"ArrowUp":i=0===s?n:i-1,this.setState({selectedIndex:i});break;case"ArrowDown":i=s===n?0:i+1,this.setState({selectedIndex:i});break;case"Enter":e.preventDefault(),this.setState({selectedItem:t[s],isModalVisiable:!0});break;case"Escape":this.setState({isModalVisiable:!1})}},this.handleClick=e=>{(e.target.closest("button")||e.target.classList.contains("item_info"))&&this.setState({isModalVisiable:!1})}}template(){return"\n      <main id='root'>\n        <header class='header'>Webtoons Search</header>\n        <div class='container'>\n          <SearchInput></SearchInput>\n          <SearchResultList></SearchResultList>\n          <SearchItemInfo></SearchItemInfo>\n        </div>\n      </main>\n  "}renderChildComponent(){const{keyword:t,selectedIndex:s,listData:n,isResultListVisiable:i,selectedItem:r,isModalVisiable:c}=this.initalState;new a({node:e(this.node,"SearchInput"),initalState:{keyword:this.initalState.keyword,onInput:this.handleChange}});const d=new l({node:e(this.node,"SearchResultList"),initalState:{keyword:t,listData:n,isResultListVisiable:i,selectedIndex:s,onClick:(e,t)=>{this.setState({selectedItem:e,isModalVisiable:!0,selectedIndex:Number(t)})}}}),h=new o({node:e(this.node,"SearchItemInfo"),initalState:{selectedItem:r,isModalVisiable:c}});this.subscribe(d),this.subscribe(h)}setEvent(){window.addEventListener("keyup",this.handleKeyChange),this.node.addEventListener("click",this.handleClick)}clearEvent(){window.removeEventListener("keyup",this.handleKeyChange),this.node.removeEventListener("click",this.handleClick)}}({node:e(document,"#root"),initalState:null})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,